/* * wildcard applies to everything */
*{
    margin: 0; /* override automatic styling browser has set*/ 
    padding:0;
    outline:none; /*specifying no blue borders around inputs*/
    text-decoration: none;
}


body {
scroll-behavior: smooth; /*scrolls the page slowly i can see everything go by*/
max-width: 100vw; /*making sure the body cant get wider than 100% viewport and if it fdoes, make it sure its hidden*/
overflow-x:hidden; /*anything larger than the body will be hidden and will not allow scrolling */
}

h1 {
    font-weight: 700;
    font-size: 600%;        
}

/* keep all semantics at the top to take precedence, ids at the bottom tsakes precedence, last element wins , important is last */
a:link {


}

a:visited {


}

a:active {

}

a:hover {


}


i {
    font-size: 50px;
    margin: 10px 30px;
    color:white;
    /* color: #ccc; */
}


p {
    line-height: 1.5em;
    font-size: 200%;
    font-family: 'Raleway', sans-serif;
 

}

/* only targets p box in welcome  
embrace extra space
alternate between left and rigth text and iage boxes
    <h3 class= "findout"> - dont wrap things in headers, use a div when wrapping things because they have no styles
    -i can target buttons with no class or id, just use semantic name buttton and it woiuld target all buttons 
    use id tpo target specific one*/

    /* i can use astericks inside of selectors to apply styles within the parent but not to the parent */



 /****************************************************************************************************************************************************************/ 
 /****************************************************************************************************************************************************************/   


 .row{   /*parent container, targets the whole container. flex properties can only see its direct children. utility class- using it serve repetitive function*/
    display: flex;
    justify-content: space-between;
    flex-wrap: wrap;
    width: 100vw; 
    background-color: #fcf0d0;
}

.row h1 {  /* what does this control? */
    font-size: 3rem;
}


/* another utility class, where is this in HTML?
.hfont{  
    font-family: 'Raleway', sans-serif;
    font-weight: bold;
    margin-bottom: 2vw;
    font-size: 100%;
    color: black;
}
*/

 .welcome {
    box-sizing: border-box; /* causes width and height to consider padding when rendering it, it doesnt add the 20*/
    position: relative;
    display: flex;
    width: 100vw; /*the div will span the entire width of the page */ 
    height: 100vh; /*to touch all sides of the browser, complete width and heighth of the screen*/
    background-color: #bf7585;
    color: white;
    padding: 20vw; /* we want things to be spaced far away from the sides of the edges of the browser, adds to width and height*/
    text-align: center;
    align-items: center;
    flex-direction: column;  /* flex treats everything like its in a row- flex direction column algns in a coloumn*/
}



.welcome p{  
    color:black;
    margin:1vw;
}

.welcome h1 {
    font-family: 'Great Vibes', sans-serif

}

.aboutme{ 
    display: flex;
    flex-direction: row-reverse; 
    padding: 5vw; 
    color: black;
    justify-content: space-between;
}

.aboutme-head {
    background-color: #fcf0d0;
    text-align: right;
    color: #77766F;
    font-family: 'Great Vibes', sans-serif;
}


.aboutme div{
    align-self: center; /*top of the flex container*/ 
    padding: 2vw;
    max-width: 60%; /* the about me box wont grow any larger than 60%, if it took whole row it would push my img to next row*/
    text-align: center;
    border-radius: 20px;
    background-color:white;
    color:black;
    font-size: 100%;
    background-color: #fcf0d0;
}


.aboutme p{
    font-size: 120%;

}

.aboutme h1{
    padding: 4vh;
}

.projects-head {
    font-size: 1 rem;
    background-color: #fcf0d0;
    color: #77766F;



}

.projects-header {
    font-family: 'Great Vibes', sans-serif;

}

.projects{
    display: flex;
    flex-direction: row; 
    justify-content: space-evenly;
     width: 90%;
     max-width: 120%;
     padding: 5vw; 
     background-color: #fcf0d0;
    }
     

.reverse{
    display: flex;
    flex-direction: row-reverse; 
    padding: 5vw; 
    color: black;
    justify-content: space-between;
    background-color: #fcf0d0;
}

.projects p {
    font-size: 1rem;
}

.projects div{       /* governs the text boxes in projects*/
    align-self: center; /*top of the flex container*/ 
    padding: 2vw;
    max-width: 40%; /* the about me box wont grow any larger than 60%, if it took whole row it would push my img to next row*/
    text-align: center;
    background-color: #fcf0d0;
    color:black;
    font-size: 100%; /* font size will take up 100% of the text box*/
}




.blog{
     box-sizing: border-box; 
     position: relative;
     display: block;
     width: 100vw;
     height: 100vh; 
     padding: 5vw; 
     background-color: white;
     color: black;
}

.contact{
     /* box-sizing: border-box; 
     position: relative; */
     position: relative;
     top: 50%;
     left:50%
     width: 100vw;
     height: 100vh; 
     padding: 5vw;
     background-color: #bf7585;
     color: black;     
}

.contact input, textarea{
  width: 50%;
  margin: 10px;
  padding: 20px;
  border-radius: 20px;
  align-content: center;

}

.contact h1 {
    text-align: right;
    color: white;
    font-family: 'Great Vibes', sans-serif;


}


.social {
    font-size: 3vw;
}



/****************************************************************************************************************************************************************/


/* #main would be the selecter
properties would be position 
attributes are in html href = "" , color= "*/
/* pixels dont change as you shrink the screen, percentages and vh vw because theyre relative sizing  */

#mainImage {
    position: relative;
    display: block;
    width: 400px; 
    height: 500px;
    border-radius: 50%; 
}

#mainImage2 {
    position: relative;
    display: block;
    height: 300px;
    border-radius: none; 
}


#welcomeButton {
 max-width: 30vw; /* 1/3 of the screem */
 padding: 1vw; /*applies to all 4 sides*/
 padding-left: 2.5vw; /*this overides it*/
 padding-right: 2.5vw; 
 border-radius: .5vw;
 box-shadow: 0px 0px 0px 0px;
 margin: 1vw;
 background-color: none;
 /* border: 2px solid white ; */
 font-size: 100%;
 font-family: 'Raleway', sans-serif;
 transition: .3s;
 cursor: pointer;
 color: black;
 /* border: 1px solid black; */

}

/* i can add pseudoclasses to classes with semicolon. selcected ,in focus or focus pseudoclass: text input areas  */
#welcomeButton:hover {
    background-color: #fcf0d0;
    color: black;

}



#footer {
    text-align: center;
    background-color: #bf7585;
    padding: 30px;
    margin: 10px;
    font-weight: bold;
    
}
/* look at codepen for sticky header*/
/* using hamburger as a large box, called a modal 
making it take up whole page 
-100vh pushes off screen, pulling itself up
width: 100vw;
    height: 100vh; its always 100 percent of the display
    opacity let us see through and see text in background 
    z-indexpushing everything to to[p, google photo shop layers  */
#hamburger {
    position: fixed;
    display: block;
    top: -100vh;
    left: 0;
    width: 100vw;
    height: 100vh;
    background-color: #bf7585;
    opacity: .8;
    z-index: 1000; /*we want it at very top*/
    transition: .5s; /*it slides in rather than appear*/


}

#hamburger ul {
    display: flex;
    justify-content: space-around;
    align-content: center;
    height: 100%;

}

#hamburger li, #hamburger a { /*targeted the a tag in li otherwise it would go to the top*/
    display: flex;
    align-items: center;

}

#hamButton {
    position: fixed;
    display: block;
    top: 2vw;
    right: 2vw;
    z-index: 1001;
    padding:1vw ;
    background-color: none;
    border: 2px solid black ;
    cursor: pointer;
    border-radius: .5vw;

}

#hamButton:hover {
    background-color: #fcf0d0;
    color: black;

}

 /****************************************************************************************************************************************************************/ 
 /****************************************************************************************************************************************************************/ 


@media only screen and (max-width:900px) {   /*looks at the width of my browser , you can style the screen differently accrding to the browser 
                                                width.anything less than 900px, watch out for the keyboard on mobile devices changing the screen size*/

#mainImage {
    position: relative;
    display: block;
    background-color: red;
    width: 90vw; /* when im on a small screen itll take up the whole row and push elements to the next row, in this case the text box */
    
    }

}
